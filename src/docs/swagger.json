{
    "swagger": "2.0",
    "info": {
        "description": "internal service for Auth",
        "title": "Internal auth",
        "termsOfService": "Kir",
        "contact": {
            "name": "API Support",
            "email": "arshiaa104@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "host": "127.0.0.1:4000",
    "basePath": "/api/v1",
    "paths": {
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Refresh JWT with refresh_token and generate new tokens and will blacklist current refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT with refresh_token",
                "parameters": [
                    {
                        "description": "Create a new atoken and rtoken",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: helper.Response",
                        "schema": {
                            "$ref": "#/definitions/dto.KeyAcDTO"
                        }
                    },
                    "400": {
                        "description": "message: helper.Response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/key": {
            "post": {
                "description": "generate a new Key when new users install the APP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key"
                ],
                "summary": "Generate a new key",
                "parameters": [
                    {
                        "description": "Create a new token",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GenerateKeyDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: new rToken and aToken + key",
                        "schema": {
                            "$ref": "#/definitions/dto.KeyAcDTO"
                        }
                    },
                    "400": {
                        "description": "message: error message",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/key/tk": {
            "post": {
                "description": "generate a Key when.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key"
                ],
                "summary": "Generate a new Token based on already existing key",
                "parameters": [
                    {
                        "description": "Create a new token",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.KeyDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: new rToken and aToken",
                        "schema": {
                            "$ref": "#/definitions/dto.KeyAcDTO"
                        }
                    },
                    "400": {
                        "description": "message: error message",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "500": {
                        "description": "message: fuck",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/rename": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "rename an already existing device.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key"
                ],
                "summary": "Rename a device",
                "parameters": [
                    {
                        "description": "info for device",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RenameDeviceDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "message: removed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "message: error message",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "500": {
                        "description": "message: fuck",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/rm": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "remove a single device from list\\nafter removing a device from list you get a 403 error on whitelist end point after that get a new key from /key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key"
                ],
                "summary": "Remove a device",
                "parameters": [
                    {
                        "description": "info for device",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RemoveDeviceDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "message: removed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "message: error message",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "500": {
                        "description": "message: fuck",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/rm/all": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "remove all devices from list except the current device\\nafter removing a device from list you get a 403 error on whitelist end point after that get a new key from /key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key"
                ],
                "summary": "Remove all devices",
                "responses": {
                    "204": {
                        "description": "message: removed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "message: error message",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "500": {
                        "description": "message: fuck",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/rw": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "removes a device IP and its identifier to the user's whitelist, ensuring the device is not allowed to access the service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Whitelist"
                ],
                "summary": "remove a device to the whitelist",
                "responses": {
                    "201": {
                        "description": "Successfully whitelisted the device",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/show": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "show all of active devices.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key"
                ],
                "summary": "show all of currently active sessions",
                "responses": {
                    "201": {
                        "description": "message: list of devices",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DeviceDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "message: error message",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "500": {
                        "description": "message: fuck",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/w": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a device IP and its identifier to the user's whitelist, ensuring the device is allowed to access the service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Whitelist"
                ],
                "summary": "Add a device to the whitelist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "tk",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully whitelisted the device",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/w/premium": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a device IP and its identifier to the user's whitelist, ensuring the device is allowed to access the service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Whitelist"
                ],
                "summary": "Add a device to the whitelist (free premium)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "tk",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully whitelisted the device",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.DeviceDTO": {
            "type": "object",
            "properties": {
                "device_name": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "dto.GenerateKeyDTO": {
            "type": "object",
            "properties": {
                "device_name": {
                    "description": "SessionId  string `json:\"session_id\" validate:\"required\"`",
                    "type": "string"
                }
            }
        },
        "dto.KeyAcDTO": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "dto.KeyDTO": {
            "type": "object",
            "required": [
                "device_name",
                "key"
            ],
            "properties": {
                "device_name": {
                    "description": "SessionId  string `json:\"session_id\" validate:\"required\"`",
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshTokenDTO": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.RemoveDeviceDTO": {
            "type": "object",
            "required": [
                "session_id"
            ],
            "properties": {
                "session_id": {
                    "type": "string"
                }
            }
        },
        "dto.RenameDeviceDTO": {
            "type": "object",
            "required": [
                "new_device_name",
                "session_id"
            ],
            "properties": {
                "new_device_name": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "helper.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    }
}